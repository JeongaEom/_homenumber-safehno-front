{"version":3,"file":"app-JHcOLCEC.js","sources":["../../../../stores/modal.ts","../../../../stores/app.ts"],"sourcesContent":["interface ButtonOption {\r\n  text: string;\r\n  styleType?: string;\r\n  onConfirm?: () => void;\r\n}\r\n\r\ninterface ModalItem {\r\n  key: string | null;\r\n  type: string;\r\n  title: string | null;\r\n  message: string | null;\r\n  isActive: boolean;\r\n  onClose: (() => void) | null;\r\n  buttons: ButtonOption[] | null;\r\n  size: number;\r\n}\r\n\r\nlet currentKey = 0;\r\nconst MAX_KEYCOUNT_ROUTE = 900000000;\r\n\r\nexport const uGenKey = (prefix: string | null = null): string => {\r\n  if (currentKey > MAX_KEYCOUNT_ROUTE) {\r\n    currentKey = 0;\r\n  }\r\n  return `${prefix ? `${prefix}-` : ''}${currentKey++}`;\r\n};\r\n\r\nconst itemBase = (): ModalItem => ({\r\n  key: null,\r\n  type: \"modal\",\r\n  title: null,\r\n  message: null,\r\n  isActive: false,\r\n  onClose: null,\r\n  buttons: null,\r\n  size: 1000,\r\n});\r\n\r\nexport const useModalStore = defineStore('modal', {\r\n  state: () => ({\r\n    items: {} as Record<string, ModalItem>,\r\n  }),\r\n  actions: {\r\n    open(p: ((key: string | null) => void) | ModalItem, options: Partial<ModalItem> = {}): string {\r\n      let newItem: ModalItem;\r\n      if (typeof p === \"function\") {\r\n        newItem = {\r\n          ...options,\r\n          isActive: true,\r\n          onClose: () => {\r\n            p(null);\r\n          },\r\n        } as ModalItem;\r\n      } else if (typeof p === \"object\") {\r\n        newItem = p;\r\n      } else {\r\n        throw new Error('Invalid parameter');\r\n      }\r\n      newItem.key = newItem.key === undefined ? uGenKey(\"modal\") : newItem.key;\r\n      this.items[newItem.key ?? \"defaultKey\"] = { ...itemBase(), ...newItem };\r\n      if (newItem.key !== null) {\r\n          this.items[newItem.key].isActive = true;\r\n          if (typeof p === \"function\") p(newItem.key);\r\n      }\r\n      return newItem.key ?? \"defaultKey\";\r\n    },\r\n    alert(msg: string | ModalItem, onClose: (() => void) | null = null): void {\r\n      if (typeof msg === \"string\") {\r\n        const newKey = uGenKey(\"modal\");\r\n        this.open({\r\n          key: newKey,\r\n          type: \"alert\",\r\n          title: \"알림\",\r\n          message: msg,\r\n          onClose: () => {\r\n            onClose && onClose();\r\n            const others = Object.keys(this.items).filter(\r\n              (key) => key !== newKey\r\n            );\r\n            others.forEach((key) => {\r\n              if (this.items[key].type === \"alert\") {\r\n                this.items[key].onClose = null;\r\n                this.close(key);\r\n              }\r\n            });\r\n          },\r\n          buttons: [{ text: \"확인\" }],\r\n        } as ModalItem);\r\n      } else {\r\n        msg.type = \"alert\";\r\n        this.open(msg);\r\n      }\r\n    },\r\n    confirm(message: string, onConfirm: () => void): void {\r\n      this.alert({\r\n        title: \"알림\",\r\n        message,\r\n        buttons: [\r\n          {\r\n            text: \"취소\",\r\n            styleType: \"secondary\",\r\n          },\r\n          {\r\n            text: \"확인\",\r\n            onConfirm,\r\n          },\r\n        ],\r\n      } as ModalItem);\r\n    },\r\n    close(key: string): void {\r\n      this.items[key]?.onClose?.();\r\n      delete this.items[key];\r\n    },\r\n    reset(): void {\r\n      this.items = {};\r\n    },\r\n  },\r\n});\r\n","interface AppState {\n  isRouting: boolean;\n  isVerifing: boolean;\n  isLoggedIn: boolean | null;\n  apiQueue: any[];\n}\n\nexport const useAppStore = defineStore(\"app\", {\n  state:(): AppState => ({\n    isRouting: false,\n    isVerifing: false,\n    isLoggedIn: null,\n    apiQueue: [],\n  }),\n  actions: {\n  },\n});\n\nif(import.meta.hot) {  //HMR\n  import.meta.hot.accept(acceptHMRUpdate(useAppStore, import.meta.hot))\n}"],"names":[],"mappings":";;;;;;;;AAiBA,IAAI,aAAa;AACjB,MAAM,qBAAqB;AAEd,MAAA,UAAU,CAAC,SAAwB,SAAiB;AAC/D,MAAI,aAAa,oBAAoB;AACtB,iBAAA;AAAA,EACf;AACA,SAAO,GAAG,SAAS,GAAG,MAAM,MAAM,EAAE,GAAG,YAAY;AACrD;AAEA,MAAM,WAAW,OAAkB;AAAA,EACjC,KAAK;AAAA,EACL,MAAM;AAAA,EACN,OAAO;AAAA,EACP,SAAS;AAAA,EACT,UAAU;AAAA,EACV,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM;AACR;AAE6B,YAAY,SAAS;AAAA,EAChD,OAAO,OAAO;AAAA,IACZ,OAAO,CAAC;AAAA,EAAA;AAAA,EAEV,SAAS;AAAA,IACP,KAAK,GAA+C,UAA8B,IAAY;AACxF,UAAA;AACA,UAAA,OAAO,MAAM,YAAY;AACjB,kBAAA;AAAA,UACR,GAAG;AAAA,UACH,UAAU;AAAA,UACV,SAAS,MAAM;AACb,cAAE,IAAI;AAAA,UACR;AAAA,QAAA;AAAA,MACF,WACS,OAAO,MAAM,UAAU;AACtB,kBAAA;AAAA,MAAA,OACL;AACC,cAAA,IAAI,MAAM,mBAAmB;AAAA,MACrC;AACA,cAAQ,MAAM,QAAQ,QAAQ,SAAY,QAAQ,OAAO,IAAI,QAAQ;AAChE,WAAA,MAAM,QAAQ,OAAO,YAAY,IAAI,EAAE,GAAG,SAAA,GAAY,GAAG;AAC1D,UAAA,QAAQ,QAAQ,MAAM;AACtB,aAAK,MAAM,QAAQ,GAAG,EAAE,WAAW;AACnC,YAAI,OAAO,MAAM;AAAY,YAAE,QAAQ,GAAG;AAAA,MAC9C;AACA,aAAO,QAAQ,OAAO;AAAA,IACxB;AAAA,IACA,MAAM,KAAyB,UAA+B,MAAY;AACpE,UAAA,OAAO,QAAQ,UAAU;AACrB,cAAA,SAAS,QAAQ,OAAO;AAC9B,aAAK,KAAK;AAAA,UACR,KAAK;AAAA,UACL,MAAM;AAAA,UACN,OAAO;AAAA,UACP,SAAS;AAAA,UACT,SAAS,MAAM;AACb,uBAAW,QAAQ;AACnB,kBAAM,SAAS,OAAO,KAAK,KAAK,KAAK,EAAE;AAAA,cACrC,CAAC,QAAQ,QAAQ;AAAA,YAAA;AAEZ,mBAAA,QAAQ,CAAC,QAAQ;AACtB,kBAAI,KAAK,MAAM,GAAG,EAAE,SAAS,SAAS;AAC/B,qBAAA,MAAM,GAAG,EAAE,UAAU;AAC1B,qBAAK,MAAM,GAAG;AAAA,cAChB;AAAA,YAAA,CACD;AAAA,UACH;AAAA,UACA,SAAS,CAAC,EAAE,MAAM,MAAM;AAAA,QAAA,CACZ;AAAA,MAAA,OACT;AACL,YAAI,OAAO;AACX,aAAK,KAAK,GAAG;AAAA,MACf;AAAA,IACF;AAAA,IACA,QAAQ,SAAiB,WAA6B;AACpD,WAAK,MAAM;AAAA,QACT,OAAO;AAAA,QACP;AAAA,QACA,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,WAAW;AAAA,UACb;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN;AAAA,UACF;AAAA,QACF;AAAA,MAAA,CACY;AAAA,IAChB;AAAA,IACA,MAAM,KAAmB;;AAClB,uBAAA,MAAM,GAAG,MAAT,mBAAY,YAAZ;AACE,aAAA,KAAK,MAAM,GAAG;AAAA,IACvB;AAAA,IACA,QAAc;AACZ,WAAK,QAAQ;IACf;AAAA,EACF;AACF,CAAC;AC9G0B,YAAY,OAAO;AAAA,EAC5C,OAAM,OAAiB;AAAA,IACrB,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,UAAU,CAAC;AAAA,EAAA;AAAA,EAEb,SAAS,CACT;AACF,CAAC;"}