{"version":3,"file":"index-CrxrjM-I.js","sources":["../../../../api/tknEncValid.js","../../../../api/index.js","../../../../pages/index.vue"],"sourcesContent":["import { call } from \"@/api\";\n\nconst tknEncValid = (tokenIssuId, encData, sign) => {\n  // const router = useRouter();\n  // const app = useAppStore();\n  // if (app.isVerifing) {\n  //   return app.verifingPromise;\n  // }\n  // app.isVerifing = true;\n  // app.verifingResolve = null;\n  // app.verifingPromise = new Promise((resolve) => {\n  //   app.verifingResolve = resolve;\n  // });\n  return call({\n    id: \"2.16 암호화 토큰 유효성 검사\",\n    endpoint: \"/safehno/v1/tkn/enc/valid\",\n    headers: \"PUBLIC\",\n    withCredentials: true,\n    data: {\n      tokenIssuId,\n      encData,\n      sign\n    },\n    // onFinally() {\n    //   app.verifingResolve(true);\n    //   app.isVerifing = false;\n    //   console.log('app.isVerifing: ', app.isVerifing);\n    //   console.log(' app.verifingResolv: ',  app.verifingResolve);\n    // },\n    onResponse({ data, code, message }) {\n      console.log('유효성_code: ', code);\n      if (code === 2000) {\n        // router.push('/login');\n        return true;\n      } else {\n        return false;\n      }\n    },\n  });\n};\n\nexport default tknEncValid;\n","import axios from \"axios\";\nimport { useAppStore } from \"@/stores/app\";\n\n// import { API_DEBUG, API_HOST } from \"./appSettings\";\nexport { default as tknEncValid } from \"./tknEncValid\";\nexport { default as authSignin } from \"./authSignin\";\n// export { default as hnoMyGet } from \"./hnoMyGet\";\nexport { default as noauthHnoGet } from \"./noauthHnoGet\";\nexport { default as termsAgree } from \"./termsAgree\";\n\n\nconst API_HOST = \"https://dev-hno-api.homenumber.co.kr\";\nconst API_DEBUG = true;\n\nexport const commonHeaders = {\n  \"Content-Type\": \"application/json;charset=UTF-8\",\n  appId: \"SAFEHNO\",\n  apikey: \"609af5e1-0047-49a5-93eb-c3a1db30fb92\",\n  Authorization: null,\n};\n\n// export const getPresetHeaders = (headers = {}) => {\n//   // Authorization 없음 (서버에서 쿠키로 처리)\n//   if (typeof headers === 'string') {\n//     // headers가 문자열인 경우\n//     return {\n//       \"Content-Type\": commonHeaders[\"Content-Type\"],\n//       appId: commonHeaders[\"appId\"],\n//       apikey: commonHeaders[\"apikey\"],\n//     };\n//   }\n\n//   if (typeof headers === 'function') {\n//     // headers가 함수인 경우\n//     return headers();\n//   }\n\n//   if (typeof headers === 'object' && !Array.isArray(headers)) {\n//     // headers가 객체인 경우 | commonHeaders와 headers를 병합하여 반환\n//     return {\n//       ...commonHeaders,\n//       ...headers,\n//     };\n//   }\n\n//   // headers가 없는 경우\n//   return commonHeaders;\n// };\n\nexport const getPresetHeaders = (headers) => {\n  if (typeof headers === \"string\") {\n    const base = {\n      \"Content-Type\": commonHeaders[\"Content-Type\"],\n      appId: commonHeaders[\"appId\"],\n      apikey: commonHeaders[\"apikey\"],\n    };\n    switch (headers) {\n      case \"DEFAULT\":\n        return {\n          ...base,\n          Authorization: commonHeaders[\"Authorization\"],\n        };\n      case \"DEFAULT_FORM\":\n        return {\n          ...base,\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: commonHeaders[\"Authorization\"],\n        };\n      case \"PUBLIC\":\n        return base;\n    }\n  } else if (typeof headers === \"function\") {\n    return headers();\n  } else {\n    return headers;\n  }\n};\n\nconst defaultErrorProc = (error) => {\n  const app = useAppStore();\n  console.log(error);\n  console.log(\"app.isRouting - \", app.isRouting);\n\n  uAddError(0, () => {\n    alert(error.response.data.message);\n  });\n\n  return false;\n};\n\nexport const call = async (settings) => {\n  const {\n    id,\n    endpoint,\n    method,\n    headers,\n    withCredentials,\n    beforeRequest,\n    data = {},\n    onResponse,\n    onError,\n    onFinally,\n  } = settings\n\n  // 선행 조건 확인\n  if (beforeRequest) {\n    // 비동기 작업이 필요하면 기다리고\n    const validRequest = await beforeRequest();\n    // 선행 조건을 통과하지 못하면 return\n    if (validRequest === false) {\n      API_DEBUG && console.log(\"🟡 요청 취소:\", id);\n      return false;\n    }\n  }\n\n  // null값을 가지는 프로퍼티 삭제\n  Object.keys(data).forEach((key) => {\n    if (data[key] === null) delete data[key];\n  });\n\n  const app = useAppStore();\n  // 호출\n  // 타겟 URL 설정\n  // endpoint로 호출하는 경우(미리 정의된 HOST를 붙인다)\n  // url로 호출하는 경우는 그대로 호출\n  const api = axios({\n    method: method || \"post\",\n    url: API_HOST + endpoint,\n    headers: getPresetHeaders(headers),\n    data,\n    // 쿠키 기반 인증 (axios)\n    withCredentials: withCredentials !== undefined ? withCredentials : false,\n  })\n\n  .then((res) => {\n    const { data, config } = res;\n    API_DEBUG && console.log(`🟢 API - ${config.url}\\n`);\n    API_DEBUG && console.log(id);\n    const resultData = JSON.stringify(data, null, 2);\n    API_DEBUG && console.log(resultData);\n\n    return onResponse({\n      code: data.code,\n      data: data.data,\n      message: data.message,\n    });\n  })\n\n  .catch(async (error) => {\n    const code = error.response?.data?.code;\n    const message = error.response?.data?.message;\n\n    API_DEBUG &&\n      console.log(\n        `🔴 API ${id}, ${code}, ${message}\\n`,\n        error.response?.data\n      );\n\n    const router = useRouter();\n\n    // 작업 중---------------------------------------\n    // 유효성 검사\n    if (code === 3000) {\n      if(endpoint !== \"/session/valid\") {\n        return call(settings);\n      } else {\n        return false;\n      }\n    } else if (code === 4020 || code === 4022) {\n      // 4020: 토큰이상, 재로그인\n      // 4022: 승인대기\n      uAddError(9999, () => {\n        setTimeout(() => {\n          alert(message);\n          const modal = useModalStore();\n          console.log(modal.items);\n        });\n      });\n      router.push(\"/login\");\n      return false;\n    } else if (code === 4013) {\n      // 접근 불가 권한\n      uAddError(9999, () => {\n        setTimeout(() => {\n          alert(message);\n        });\n      });\n      router.push(\"/\");\n      return false;\n    } else if (code === 3004) {\n      // 3004: 중복 로그인\n      uAddError(9999, () => {\n        alert(message, async () => {\n          //   await authSignout();\n        });\n      });\n      return false;\n    }\n\n    // 에러 처리를 정의해 놓은 경우\n    if (onError) {\n      let errorResult = undefined;\n      if (typeof onError === \"function\") {\n        errorResult = onError(code);\n      } else {\n        errorResult = onError[String(code)]\n          ? onError[String(code)](message)\n          : undefined;\n      }\n      // 에러 콜백에서 결과를 주는 경우만 리턴 시킨다.\n      if (errorResult !== undefined) return errorResult;\n    }\n    defaultErrorProc(error);\n    return false;\n  })\n  .finally(() => {\n    // 로딩 중\n    app.apiQueue = app.apiQueue.filter((item) => item !== api);\n    onFinally && onFinally();\n  });\n  app.apiQueue.push(api);\n  return api;\n\n};","<script setup>\n  import { reactive, onMounted } from 'vue';\n  import { tknEncValid } from '@/api';\n\n  // 페이지 메타 설정\n  definePageMeta({\n    layout: \"default-none\",\n    name: \"main\",\n  });\n\n  const d = reactive({\n    tokenIssuId: \"\",\n    encData: \"\",\n    sign: \"\"\n  });\n\n  const parseDataFromURL = async () => {\n    const params = new URLSearchParams(window.location.search);\n    const tokenIssuId = params.get('tokenIssuId');\n    const encData = params.get('encData');\n    const sign = params.get('sign');\n\n    d.tokenIssuId = tokenIssuId;\n    d.encData = encData;\n    d.sign = sign;\n\n    await response();\n  };\n\n  const response = async () => {\n    try {\n      await tknEncValid(d.tokenIssuId, d.encData, d.sign);\n    } catch (error) {\n      console.error(\"API 호출 중 오류 발생:\", error);\n    }\n  };\n\n  console.log('response: ', response);\n\n  onMounted(async() => {\n    await parseDataFromURL();\n  });\n</script>\n\n<template>\n</template>\n"],"names":["data"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,cAAc,CAAC,aAAa,SAAS,SAAS;AAWlD,SAAO,KAAK;AAAA,IACV,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOD,WAAW,EAAE,MAAM,MAAM,QAAO,GAAI;AAClC,cAAQ,IAAI,cAAc,IAAI;AAC9B,UAAI,SAAS,KAAM;AAEjB,eAAO;AAAA,MACf,OAAa;AACL,eAAO;AAAA,MACR;AAAA,IACF;AAAA,EACL,CAAG;AACH;AC5BA,MAAM,WAAW;AAGV,MAAM,gBAAgB;AAAA,EAC3B,gBAAgB;AAAA,EAChB,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,eAAe;AACjB;AA8BO,MAAM,mBAAmB,CAAC,YAAY;AAC3C,MAAI,OAAO,YAAY,UAAU;AAC/B,UAAM,OAAO;AAAA,MACX,gBAAgB,cAAc,cAAc;AAAA,MAC5C,OAAO,cAAc,OAAO;AAAA,MAC5B,QAAQ,cAAc,QAAQ;AAAA,IACpC;AACI,YAAQ,SAAO;AAAA,MACb,KAAK;AACH,eAAO;AAAA,UACL,GAAG;AAAA,UACH,eAAe,cAAc,eAAe;AAAA,QACtD;AAAA,MACM,KAAK;AACH,eAAO;AAAA,UACL,GAAG;AAAA,UACH,gBAAgB;AAAA,UAChB,eAAe,cAAc,eAAe;AAAA,QACtD;AAAA,MACM,KAAK;AACH,eAAO;AAAA,IACV;AAAA,EACL,WAAa,OAAO,YAAY,YAAY;AACxC,WAAO,QAAO;AAAA,EAClB,OAAS;AACL,WAAO;AAAA,EACR;AACH;AAEA,MAAM,mBAAmB,CAAC,UAAU;AAClC,QAAM,MAAM;AACZ,UAAQ,IAAI,KAAK;AACjB,UAAQ,IAAI,oBAAoB,IAAI,SAAS;AAE7C,YAAU,GAAG,MAAM;AACjB,UAAM,MAAM,SAAS,KAAK,OAAO;AAAA,EACrC,CAAG;AAED,SAAO;AACT;AAEO,MAAM,OAAO,OAAO,aAAa;AACtC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO,CAAE;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,EACJ,IAAM;AAGJ,MAAI,eAAe;AAEjB,UAAM,eAAe,MAAM;AAE3B,QAAI,iBAAiB,OAAO;AACb,cAAQ,IAAI,aAAa,EAAE;AACxC,aAAO;AAAA,IACR;AAAA,EACF;AAGD,SAAO,KAAK,IAAI,EAAE,QAAQ,CAAC,QAAQ;AACjC,QAAI,KAAK,GAAG,MAAM;AAAM,aAAO,KAAK,GAAG;AAAA,EAC3C,CAAG;AAED,QAAM,MAAM;AAKZ,QAAM,MAAM,MAAM;AAAA,IAChB,QAAQ,UAAU;AAAA,IAClB,KAAK,WAAW;AAAA,IAChB,SAAS,iBAAiB,OAAO;AAAA,IACjC;AAAA;AAAA,IAEA,iBAAiB,oBAAoB,SAAY,kBAAkB;AAAA,EACvE,CAAG,EAEA,KAAK,CAAC,QAAQ;AACb,UAAM,EAAE,MAAAA,OAAM,OAAQ,IAAG;AACZ,YAAQ,IAAI,YAAY,OAAO,GAAG;AAAA,CAAI;AACtC,YAAQ,IAAI,EAAE;AAC3B,UAAM,aAAa,KAAK,UAAUA,OAAM,MAAM,CAAC;AAClC,YAAQ,IAAI,UAAU;AAEnC,WAAO,WAAW;AAAA,MAChB,MAAMA,MAAK;AAAA,MACX,MAAMA,MAAK;AAAA,MACX,SAASA,MAAK;AAAA,IACpB,CAAK;AAAA,EACL,CAAG,EAEA,MAAM,OAAO,UAAU;;AACtB,UAAM,QAAO,iBAAM,aAAN,mBAAgB,SAAhB,mBAAsB;AACnC,UAAM,WAAU,iBAAM,aAAN,mBAAgB,SAAhB,mBAAsB;AAGpC,YAAQ;AAAA,MACN,UAAU,EAAE,KAAK,IAAI,KAAK,OAAO;AAAA;AAAA,OACjC,WAAM,aAAN,mBAAgB;AAAA,IACxB;AAEI,UAAM,SAAS;AAIf,QAAI,SAAS,KAAM;AACjB,UAAG,aAAa,kBAAkB;AAChC,eAAO,KAAK,QAAQ;AAAA,MAC5B,OAAa;AACL,eAAO;AAAA,MACR;AAAA,IACF,WAAU,SAAS,QAAQ,SAAS,MAAM;AAGzC,gBAAU,MAAM,MAAM;AACpB,mBAAW,MAAM;AACf,gBAAM,OAAO;AACb,gBAAM,QAAQ;AACd,kBAAQ,IAAI,MAAM,KAAK;AAAA,QACjC,CAAS;AAAA,MACT,CAAO;AACD,aAAO,KAAK,QAAQ;AACpB,aAAO;AAAA,IACb,WAAe,SAAS,MAAM;AAExB,gBAAU,MAAM,MAAM;AACpB,mBAAW,MAAM;AACf,gBAAM,OAAO;AAAA,QACvB,CAAS;AAAA,MACT,CAAO;AACD,aAAO,KAAK,GAAG;AACf,aAAO;AAAA,IACb,WAAe,SAAS,MAAM;AAExB,gBAAU,MAAM,MAAM;AACpB,cAAM,SAAS,YAAY;AAAA,QAEnC,CAAS;AAAA,MACT,CAAO;AACD,aAAO;AAAA,IACR;AAGD,QAAI,SAAS;AACX,UAAI,cAAc;AAClB,UAAI,OAAO,YAAY,YAAY;AACjC,sBAAc,QAAQ,IAAI;AAAA,MAClC,OAAa;AACL,sBAAc,QAAQ,OAAO,IAAI,CAAC,IAC9B,QAAQ,OAAO,IAAI,CAAC,EAAE,OAAO,IAC7B;AAAA,MACL;AAED,UAAI,gBAAgB;AAAW,eAAO;AAAA,IACvC;AACD,qBAAiB,KAAK;AACtB,WAAO;AAAA,EACX,CAAG,EACA,QAAQ,MAAM;AAEb,QAAI,WAAW,IAAI,SAAS,OAAO,CAAC,SAAS,SAAS,GAAG;AACzD,iBAAa,UAAS;AAAA,EAC1B,CAAG;AACD,MAAI,SAAS,KAAK,GAAG;AACrB,SAAO;AAET;;;;;ACrNE,UAAM,IAAI,SAAS;AAAA,MACjB,aAAa;AAAA,MACb,SAAS;AAAA,MACT,MAAM;AAAA,IAAA,CACP;AAeD,UAAM,WAAW,YAAY;AACvB,UAAA;AACF,cAAM,YAAY,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI;AAAA,eAC3C,OAAO;AACN,gBAAA,MAAM,mBAAmB,KAAK;AAAA,MACxC;AAAA,IAAA;AAGM,YAAA,IAAI,cAAc,QAAQ;;;;;;;;;;;"}